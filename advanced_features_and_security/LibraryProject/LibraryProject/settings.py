"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n3%no=s!+$s4g98kuj01nm7@ih1v1l#x+q+l@^ij*!7=em9c#^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'csp',
    'relationship_app'
]

# Set Content Security Policy
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'", 'https://trusted.cdn.com')  # Allow scripts from trusted sources
CSP_STYLE_SRC = ("'self'", 'https://trusted.cdn.com')   # Allow styles from trusted sources
CSP_IMG_SRC = ("'self'",)  # Allow images only from the same domain

AUTH_USER_MODEL = 'bookshelf.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Set to False in production to disable debug mode and avoid revealing sensitive information
DEBUG = False

# Security settings to protect against XSS and clickjacking
SECURE_BROWSER_XSS_FILTER = True  # Enables browser's XSS filter
X_FRAME_OPTIONS = 'DENY'  # Prevents the website from being embedded in a frame (clickjacking protection)
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevents browsers from guessing content types

# Enforce secure cookies to be transmitted only over HTTPS (for production)
CSRF_COOKIE_SECURE = True  # CSRF cookie is only sent over HTTPS
SESSION_COOKIE_SECURE = True  # Session cookie is only sent over HTTPS

# Optional: Enforce HTTP Strict Transport Security (HSTS) for added security
SECURE_HSTS_SECONDS = 31536000  # Enforce HTTPS for 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Optional: Enforce same-origin policy for cookies
CSRF_COOKIE_HTTPONLY = True  # CSRF cookie is not accessible via JavaScript
SESSION_COOKIE_HTTPONLY = True  # Session cookie is not accessible via JavaScript

# settings.py

# Redirect all HTTP requests to HTTPS
SECURE_SSL_REDIRECT = True  # Ensure all non-HTTPS traffic is redirected to HTTPS

# HTTP Strict Transport Security (HSTS)
SECURE_HSTS_SECONDS = 31536000  # Set the HSTS max-age to 1 year (in seconds)
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply HSTS policy to all subdomains
SECURE_HSTS_PRELOAD = True  # Enable HSTS preload, which adds the domain to browsers' preload lists

# Secure Cookies
SESSION_COOKIE_SECURE = True  # Ensure session cookies are only transmitted over HTTPS
CSRF_COOKIE_SECURE = True  # Ensure CSRF cookies are only transmitted over HTTPS

# settings.py

# Set to True to mark the cookies as HttpOnly for enhanced security
SESSION_COOKIE_HTTPONLY = True  # Prevents JavaScript access to the session cookie
CSRF_COOKIE_HTTPONLY = True  # Prevents JavaScript access to the CSRF cookie

# SameSite Cookie Setting
SESSION_COOKIE_SAMESITE = 'Strict'  # Prevents sending cookies in cross-site requests
CSRF_COOKIE_SAMESITE = 'Strict'  # Prevents sending CSRF cookies in cross-site requests

# settings.py

# Prevent your site from being framed (clickjacking protection)
X_FRAME_OPTIONS = 'DENY'  # Prevents your content from being embedded in an iframe

# Prevent browsers from sniffing content types
SECURE_CONTENT_TYPE_NOSNIFF = True  # Ensures browsers respect declared content types

# Enable browser XSS filtering
SECURE_BROWSER_XSS_FILTER = True  # Enables the browser's XSS filter to prevent cross-site scripting attacks

SECURE_PROXY_SSL_HEADER", "HTTP_X_FORWARDED_PROTO